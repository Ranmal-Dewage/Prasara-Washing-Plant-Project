/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import static inventory.dbCon.con;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ITP.Home;

/**
 *
 * @author Tenusha
 */
public class viewRecipe extends javax.swing.JPanel {

    int tot;
    int maxPages;
    int pg = 1;
    int lim = 15;
    int offset = 0;

    /**
     * Creates new form viewRecipe
     */
    public viewRecipe() throws SQLException {
        initComponents();
        edit.setVisible(false);
        delete.setVisible(false);

        dbCon d = new dbCon();
        d.connect();

        updateMax("SELECT COUNT(*) AS count FROM recipe");
        addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
    }

    void addTable(String query) {
        try {
            ResultSet rs = con.createStatement().executeQuery(query);

            DefaultTableModel model = new DefaultTableModel(new Object[]{"Customer", "Date", "Style", "Color", "Recipe Time", "Wash Side", "Notes", "Chemical", "Chemical qty"}, 0);
            while (rs.next()) {
                //String ref = rs.getString("refNo");
                String cus = rs.getString("customer");
                String date = rs.getString("date");
                String style = rs.getString("styleNo");
                String col = rs.getString("color");
                String rt = rs.getString("rTime");
                //String wt = rs.getString("weight");
                String ws = rs.getString("washSide");
                String nt = rs.getString("notes");
                String che = rs.getString("chemical");
                String qty = rs.getString("chemicalQty");
                Object[] row = {cus, date, style, col, rt, ws, nt, che, qty};
                model.addRow(row);
            }
            jTable4.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(viewStyle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void search() throws SQLException {
        String sh = search.getText();
        if (sh.equals("")) {
            updateMax("SELECT COUNT(*) AS count FROM recipe");
            addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
        } else {
            String q = "SELECT * FROM recipe WHERE customer like '%" + sh + "%' or styleNo like '%" + sh + "%' or date like '%" + sh + "%'";
            addTable(q);
        }
    }

    void updateMax(String q) throws SQLException {
        ResultSet rs = con.createStatement().executeQuery(q);
        rs.next();
        tot = rs.getInt("count");

        int i = tot % lim;
        if (i > 0) {
            maxPages = tot / lim + 1;
        } else {
            maxPages = tot / lim;
        }
        total.setText(Integer.toString(maxPages));

        if (pg > maxPages) {
            pg = maxPages;
            page.setText(Integer.toString(pg));
            if (pg == 0) {
                offset = (pg) * lim;
            } else {
                offset = (pg - 1) * lim;
            }
        }
        if (maxPages == 1) {
            pg = 1;
            page.setText(Integer.toString(pg));
            if (pg == 0) {
                offset = (pg) * lim;
            } else {
                offset = (pg - 1) * lim;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        page = new javax.swing.JTextField();
        total = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        limit1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(940, 480));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(940, 480));
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Recipes");
        jPanel7.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 13, 372, -1));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jTable4.setRowHeight(35);
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jPanel7.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 910, 250));

        search.setText("search");
        search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchCaretUpdate(evt);
            }
        });
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel7.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 160, 30));

        jSeparator10.setBackground(new java.awt.Color(204, 204, 204));
        jPanel7.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 920, 13));

        page.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pageActionPerformed(evt);
            }
        });
        jPanel7.add(page, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 30, 30));

        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel7.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, 30, 30));

        jButton5.setBackground(new java.awt.Color(71, 71, 116));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryImages/icons8-end-14 (2).png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, 30, 30));

        jButton7.setBackground(new java.awt.Color(71, 71, 116));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryImages/icons8-skip-to-start-14.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 30, 30));

        jButton8.setBackground(new java.awt.Color(71, 71, 116));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryImages/icons8-end-filled-14.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 30, 30));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Showing");
        jPanel7.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 50, 30));

        limit1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "10", "15" }));
        limit1.setSelectedIndex(2);
        limit1.setAlignmentX(5.0F);
        limit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limit1ActionPerformed(evt);
            }
        });
        jPanel7.add(limit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 60, 30));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("results per page");
        jPanel7.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 100, 30));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("/");
        jPanel7.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, 30, 30));

        jButton6.setBackground(new java.awt.Color(71, 71, 116));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryImages/icons8-skip-to-start-14 (1).png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 30, 30));

        jButton3.setBackground(new java.awt.Color(219, 76, 13));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ITP/Images/Back.png"))); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, 90, -1));

        jButton2.setBackground(new java.awt.Color(0, 2, 240));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("+  Add New Recipe");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 180, 30));

        jButton1.setBackground(new java.awt.Color(0, 179, 50));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryImages/refresh.png"))); // NOI18N
        jButton1.setText("Refresh");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.setIconTextGap(10);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 120, 30));

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryImages/delete.png"))); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel7.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 410, 100, 30));

        edit.setBackground(new java.awt.Color(0, 0, 255));
        edit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryImages/edit.png"))); // NOI18N
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel7.add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 410, -1, 30));

        jButton10.setBackground(new java.awt.Color(71, 71, 116));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ITP/Images/Print.png"))); // NOI18N
        jButton10.setText("Print");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 60, 90, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ITP/Images/IMG-20180315-WA0017.jpg"))); // NOI18N
        jPanel7.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
        edit.setVisible(true);
        delete.setVisible(true);
    }//GEN-LAST:event_jTable4MouseClicked

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
        search.setText(null);

    }//GEN-LAST:event_searchMouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchActionPerformed

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel7MouseClicked

    private void searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchCaretUpdate
        try {
            // TODO add your handling code here:
            search();
        } catch (SQLException ex) {
            Logger.getLogger(viewRecipe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchCaretUpdate

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        pg = maxPages;
        page.setText(Integer.toString(pg));
        if (pg == 0) {
            offset = (pg) * lim;
        } else {
            offset = (pg - 1) * lim;
        }
        try {
            updateMax("SELECT COUNT(*) AS count FROM recipe");
            addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
        } catch (SQLException ex) {
            Logger.getLogger(viewGarments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if (pg < maxPages) {
            pg++;
            page.setText(Integer.toString(pg));
        }
        if (pg == 0) {
            offset = (pg) * lim;
        } else {
            offset = (pg - 1) * lim;
        }
        try {
            updateMax("SELECT COUNT(*) AS count FROM recipe");
            addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
        } catch (SQLException ex) {
            Logger.getLogger(viewGarments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void pageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pageActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt((String) page.getText());
        if (p > maxPages || p < 1) {
        } else {
            try {
                pg = p;
                if (pg == 0) {
                    offset = (pg) * lim;
                } else {
                    offset = (pg - 1) * lim;
                }
                updateMax("SELECT COUNT(*) AS count FROM recipe");
                addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
            } catch (SQLException ex) {
                Logger.getLogger(viewGarments.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_pageActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (pg > 1) {
            pg--;
            page.setText(Integer.toString(pg));
        }
        if (pg == 0) {
            offset = (pg) * lim;
        } else {
            offset = (pg - 1) * lim;
        }
        try {
            updateMax("SELECT COUNT(*) AS count FROM recipe");
            addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
        } catch (SQLException ex) {
            Logger.getLogger(viewGarments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        pg = 1;
        page.setText(Integer.toString(pg));
        if (pg == 0) {
            offset = (pg) * lim;
        } else {
            offset = (pg - 1) * lim;
        }
        try {
            updateMax("SELECT COUNT(*) AS count FROM recipe");
            addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
        } catch (SQLException ex) {
            Logger.getLogger(viewGarments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void limit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limit1ActionPerformed
        // TODO add your handling code here:
        if (limit1.getSelectedItem().equals("")) {
            lim = 15;
            limit1.setSelectedItem("15");
            pg = 1;
            page.setText(Integer.toString(pg));
            if (pg == 0) {
                offset = (pg) * lim;
            } else {
                offset = (pg - 1) * lim;
            }
            try {
                updateMax("SELECT COUNT(*) AS count FROM recipe");
                addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
            } catch (SQLException ex) {
                Logger.getLogger(viewGarments.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lim = Integer.parseInt((String) limit1.getSelectedItem());
            pg = 1;
            page.setText(Integer.toString(pg));
            if (pg == 0) {
                offset = (pg) * lim;
            } else {
                offset = (pg - 1) * lim;
            }
            try {
                updateMax("SELECT COUNT(*) AS count FROM recipe");
                addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
            } catch (SQLException ex) {
                Logger.getLogger(viewGarments.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_limit1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        addRecipe a = new addRecipe();
        a.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        refresh();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int r = jTable4.getSelectedRow();
        String cu = (String) jTable4.getValueAt(r, 0);
        String sty = (String) jTable4.getValueAt(r, 2);

        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Recipe will be deleted", "Warning", dialogButton);

        if (dialogResult == 0) {
            try {
                con.prepareStatement("DELETE FROM recipe WHERE styleNo='" + sty + "' AND customer = '" + cu + "' ").execute();
                JOptionPane.showMessageDialog(null, "Recipe deleted", "Done", JOptionPane.INFORMATION_MESSAGE);
                refresh();
            } catch (SQLException ex) {
                Logger.getLogger(viewColor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        int r = jTable4.getSelectedRow();
        String cu = (String) jTable4.getValueAt(r, 0);
        String sty = (String) jTable4.getValueAt(r, 2);
        addRecipe a = new addRecipe("edit", sty, cu);
        a.setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Home.viewRecipe.setVisible(false);
        Home.viewColor.setVisible(false);
        Home.viewStyle.setVisible(false);
        Home.vSize.setVisible(false);
        Home.vGarments.setVisible(false);
        Home.i.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        Home.Report(jTable4, "Recipe Details","E:\\Reports\\recipe.pdf");
    }//GEN-LAST:event_jButton10ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JTable jTable4;
    private javax.swing.JComboBox<String> limit1;
    private javax.swing.JTextField page;
    private javax.swing.JTextField search;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables

    public void refresh() {
        try {
            search.setText("search");
            updateMax("SELECT COUNT(*) AS count FROM recipe");
            addTable("SELECT * FROM recipe LIMIT " + lim + " OFFSET " + offset + "");
        } catch (SQLException ex) {
            Logger.getLogger(viewRecipe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
