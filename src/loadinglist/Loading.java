/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loadinglist;

import ITP.Home;
import Mainternance.AddMachine;
import Mainternance.ViewMachine;
import Mainternance.ViewVehicle;
import inventory.dbCon;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pandu
 */
public class Loading extends javax.swing.JPanel {

    /**
     * Creates new form Loading
     */
      dbCon db = new dbCon();
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    int row = -1;
    
    int tot;
    int maxPages;
    int pg=1;
    int lim=15;
    int offset=0;
    
    public Loading() throws SQLException{
        initComponents();
          edit.setVisible(false);
        delete.setVisible(false);
        Issue.setVisible(false);
       con= db.ConnectDB();
        
        updateMax("SELECT COUNT(*) AS count FROM loadlist");
        addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        LoadingList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtabmachine = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        total = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        page = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        limit1 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        Refresh = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        Issue = new javax.swing.JButton();
        print = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LoadingList.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        LoadingList.setForeground(new java.awt.Color(255, 255, 255));
        LoadingList.setText("Loading List");
        jPanel3.add(LoadingList, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 372, -1));

        jtabmachine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Loadinglist#", "Type", "Customer", "Batch No", "Finished Date", "Vehicle no", "Gatepass No", "Issue by"
            }
        ));
        jtabmachine.setRowHeight(35);
        jtabmachine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtabmachineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtabmachine);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 910, 250));

        search.setText("SEARCH.......");
        search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchCaretUpdate(evt);
            }
        });
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel3.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 160, 30));

        jSeparator4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 920, 13));

        jButton5.setBackground(new java.awt.Color(71, 71, 116));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-end-14 (2).png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, 30, 30));

        jButton8.setBackground(new java.awt.Color(71, 71, 116));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-end-filled-14.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 30, 30));

        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, 30, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("/");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, 30, 30));

        page.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pageActionPerformed(evt);
            }
        });
        jPanel3.add(page, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 30, 30));

        jButton7.setBackground(new java.awt.Color(71, 71, 116));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-skip-to-start-14.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 30, 30));

        jButton6.setBackground(new java.awt.Color(71, 71, 116));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-skip-to-start-14 (1).png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 30, 30));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Showing");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 50, 30));

        limit1.setEditable(true);
        limit1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "10", "15" }));
        limit1.setSelectedIndex(2);
        limit1.setAlignmentX(5.0F);
        limit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limit1ActionPerformed(evt);
            }
        });
        jPanel3.add(limit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 60, 30));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("results per page");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 100, 30));

        Refresh.setBackground(new java.awt.Color(0, 179, 50));
        Refresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Refresh.setForeground(new java.awt.Color(255, 255, 255));
        Refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        Refresh.setText("Refresh");
        Refresh.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        Refresh.setIconTextGap(10);
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        jPanel3.add(Refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 120, 30));

        Add.setBackground(new java.awt.Color(0, 2, 240));
        Add.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Add.setForeground(new java.awt.Color(255, 255, 255));
        Add.setText("+  Add Loading list");
        Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMouseClicked(evt);
            }
        });
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        jPanel3.add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 60, 180, 30));

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel3.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 420, 100, 30));

        edit.setBackground(new java.awt.Color(0, 0, 255));
        edit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel3.add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 420, -1, 30));

        Issue.setBackground(new java.awt.Color(0, 2, 240));
        Issue.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Issue.setForeground(new java.awt.Color(255, 255, 255));
        Issue.setText("+ Issue GatePass");
        Issue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueActionPerformed(evt);
            }
        });
        jPanel3.add(Issue, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 100, 150, 30));

        print.setBackground(new java.awt.Color(71, 71, 116));
        print.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        print.setForeground(new java.awt.Color(255, 255, 255));
        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ITP/Images/Print.png"))); // NOI18N
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        jPanel3.add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, 90, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ITP/Images/IMG-20180315-WA0017.jpg"))); // NOI18N
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

     void addTable(String query) {
        try {
            ResultSet rs = con.createStatement().executeQuery(query);
            
            DefaultTableModel model = new DefaultTableModel(new Object[]{"loadlistno","type","customer","batchno","dateofloadlist","vehicleno","gatepass","empNo"}, 0);
            while (rs.next()) {
                String loadlist = rs.getString("loadlistno");
                String Type = rs.getString("type");
                String customer = rs.getString("customer");
                String batch = rs.getString("batchno");
                String Date = rs.getString("dateofloadlist");
                String veno = rs.getString("vehicleno");
                String grn = rs.getString("gatepass");
               // String Date1 = rs.getString("dateofdept");
                String emp = rs.getString("empNo");
                
                
               
                Object[] row = {loadlist,Type,customer,batch,Date,veno,grn,emp};                   
                model.addRow(row);                   
            }
            jtabmachine.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    void search() throws SQLException{
        String sh = search.getText();
        if(sh.equals("")){
            updateMax("SELECT COUNT(*) AS count FROM loadlist");
            addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
        }
        else{
            String q = "SELECT * FROM loadlist WHERE loadlistno like '%"+sh+"%'";
            addTable(q);
        }
    }
    
    void updateMax(String q) throws SQLException{
        ResultSet rs = con.createStatement().executeQuery(q);
        rs.next();
        tot = rs.getInt("count");
        
        int i = tot%lim;
        if(i>0){
            maxPages = tot/lim + 1;
        }
        else{
            maxPages = tot/lim;
        }
        total.setText(Integer.toString(maxPages));
        
        if(pg>maxPages){
            pg = maxPages;
            page.setText(Integer.toString(pg));
            offset = (pg-1)*lim;
        }
        if(maxPages==1){
            pg = 1;
            page.setText(Integer.toString(pg));
            offset = (pg-1)*lim;
        }
    }
    
    
    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MouseClicked

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
          int r = jtabmachine.getSelectedRow();
        String loadlist = (String) jtabmachine.getValueAt(r, 0);
        String Type = (String) jtabmachine.getValueAt(r, 1);
        String customer = (String) jtabmachine.getValueAt(r, 2);
        String batch = (String) jtabmachine.getValueAt(r, 3);
        String Date = (String) jtabmachine.getValueAt(r, 4);
        String vehicleno = (String) jtabmachine.getValueAt(r, 5);
        String grn = (String) jtabmachine.getValueAt(r, 6);
     //  String Date1 = (String) jtabmachine.getValueAt(r, 7);
        String empno = (String) jtabmachine.getValueAt(r, 7);
        
        Addloadinglist a = null;
          try {
              a = new Addloadinglist(loadlist,Type,customer,batch,Date,vehicleno,grn,empno);
          } catch (Exception ex) {
              Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
          }
        a.setVisible(true);
        
         /* try {
              IssueGatepass b= new IssueGatepass(vehicleno,grn,Date1,empno);
          } catch (Exception ex) {
              Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
          }*/
                
       
    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int r = jtabmachine.getSelectedRow();
        String loadlist = (String) jtabmachine.getValueAt(r, 0);
        String Type = (String) jtabmachine.getValueAt(r, 1);
        String customer = (String) jtabmachine.getValueAt(r, 2);
        String batch = (String) jtabmachine.getValueAt(r, 3);
        String Date = (String) jtabmachine.getValueAt(r, 4);
        String vehicleno = (String) jtabmachine.getValueAt(r, 5);
        String grn = (String) jtabmachine.getValueAt(r, 6);
       // String Date1 = (String) jtabmachine.getValueAt(r, 7);
        String empno = (String) jtabmachine.getValueAt(r, 7);
        
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Loadlist will be deleted","Warning",dialogButton);
        
        if(dialogResult==0){
            try {
                con.prepareStatement("DELETE FROM loadlist WHERE loadlistno = '"+loadlist+"' AND type ='"+Type+"' AND customer = '"+customer+"'AND batchno ='"+batch+"' AND dateofloadlist = '"+Date+"' AND vehicleno = '"+vehicleno+"'AND batchno ='"+batch+"' AND dateofloadlist = '"+Date+"'  ").execute();
                JOptionPane.showMessageDialog (null, "loadlist deleted", "Done", JOptionPane.INFORMATION_MESSAGE);
                updateMax("SELECT COUNT(*) AS count FROM loadlist");
                addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
            } catch (SQLException ex) {
                Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        Addloadinglist a = null;
        try {
            a = new Addloadinglist();
        } catch (SQLException ex) {
            Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
        }
        a.setVisible(true);
       
    }//GEN-LAST:event_AddActionPerformed

    private void AddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_AddMouseClicked

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed

         loadData();
        
    }//GEN-LAST:event_RefreshActionPerformed

    private void limit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limit1ActionPerformed
        // TODO add your handling code here:
        if(limit1.getSelectedItem().equals("")){
            lim = 15;
            limit1.setSelectedItem("15");
            pg = 1;
            page.setText(Integer.toString(pg));
            offset = (pg-1)*lim;
            try {
                updateMax("SELECT COUNT(*) AS count FROM loadlist");
                addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
            } catch (SQLException ex) {
                Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            lim = Integer.parseInt((String) limit1.getSelectedItem());
            pg = 1;
            page.setText(Integer.toString(pg));
            offset = (pg-1)*lim;
            try {
                updateMax("SELECT COUNT(*) AS count FROM loadlist");
                addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
            } catch (SQLException ex) {
                Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_limit1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        pg = 1;
        page.setText(Integer.toString(pg));
        offset = (pg-1)*lim;
        try {
            updateMax("SELECT COUNT(*) AS count FROM loadlist");
            addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
        } catch (SQLException ex) {
            Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         if(pg>1){
            pg--;
            page.setText(Integer.toString(pg));
        }
        offset = (pg-1)*lim;
        try {
            updateMax("SELECT COUNT(*) AS count FROM loadlist");
            addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
        } catch (SQLException ex) {
            Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void pageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pageActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt((String)page.getText());
        if (p>maxPages || p<1){}
        else{
            try {
                pg = p;
                offset = (pg-1)*lim;
                updateMax("SELECT COUNT(*) AS count FROM loadlist");
                addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
            } catch (SQLException ex) {
                Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_pageActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

         if(pg<maxPages){
            pg++;
            page.setText(Integer.toString(pg));
        }
        offset = (pg-1)*lim;
        try {
            updateMax("SELECT COUNT(*) AS count FROM loadlist");
            addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
        } catch (SQLException ex) {
            Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         pg = maxPages;
        page.setText(Integer.toString(pg));
        offset = (pg-1)*lim;
        try {
            updateMax("SELECT COUNT(*) AS count FROM loadlist");
            addTable("SELECT * FROM loadlist LIMIT "+lim+" OFFSET "+offset+"");
        } catch (SQLException ex) {
            Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
        search.setText(null);
    }//GEN-LAST:event_searchMouseClicked

    private void searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchCaretUpdate

        try {
            // TODO add your handling code here:
            search();
        } catch (SQLException ex) {
            Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchCaretUpdate

    private void jtabmachineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtabmachineMouseClicked
        // TODO add your handling code here:
        edit.setVisible(true);
//        print.setVisible(true);
        delete.setVisible(true);
        Issue.setVisible(true);
    }//GEN-LAST:event_jtabmachineMouseClicked

    private void IssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueActionPerformed
        // TODO add your handling code here:
        int r = jtabmachine.getSelectedRow();
        String loadlist = (String) jtabmachine.getValueAt(r, 0);
        String Type = (String) jtabmachine.getValueAt(r, 1);
        String customer = (String) jtabmachine.getValueAt(r, 2);
        String batch = (String) jtabmachine.getValueAt(r, 3);
        String Date = (String) jtabmachine.getValueAt(r, 4);
        String vehicleno = (String) jtabmachine.getValueAt(r, 5);
        String grn = (String) jtabmachine.getValueAt(r, 6);
       // String Date1 = (String) jtabmachine.getValueAt(r, 7);
        String empno = (String) jtabmachine.getValueAt(r, 7);
        
        System.out.println(vehicleno);
        System.out.println(grn);
        System.out.println(empno);
        System.out.println(loadlist);
        
        
          try {
              IssueGatepass b= new IssueGatepass(vehicleno,grn,loadlist,empno);
              b.setVisible(true);
          } catch (SQLException ex) {
              Logger.getLogger(IssueGatepass.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_IssueActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        Home.Report(jtabmachine, "Loading List","E:\\Reports\\loadinglist.pdf");
    }//GEN-LAST:event_printActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Issue;
    private javax.swing.JLabel LoadingList;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jtabmachine;
    private javax.swing.JComboBox<String> limit1;
    private javax.swing.JTextField page;
    private javax.swing.JButton print;
    private javax.swing.JTextField search;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables


public void loadData() {
       
   try {

            DefaultTableModel dtm = (DefaultTableModel) jtabmachine.getModel();

            dtm.setRowCount(0);

            String sql = "SELECT * FROM loadlist";
            pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                Vector v = new Vector();

                v.add(rs.getString("loadlistno"));
                v.add(rs.getString("type"));
                v.add(rs.getString("customer"));
                v.add(rs.getString("batchno"));
                v.add(rs.getString("dateofloadlist"));
                 v.add(rs.getString("vehicleno"));
                v.add(rs.getString("gatepass"));
                v.add(rs.getString("empNo"));
                
                
                

                dtm.addRow(v);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }    

    
}
