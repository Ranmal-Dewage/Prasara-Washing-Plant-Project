/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loadinglist;

/**
 *
 * @author pandu
 */
import Mainternance.AddMachine;
import inventory.dbCon;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;

public class Addloadinglist extends javax.swing.JFrame {

    /**
     * Creates new form Addloadinglist
     */
      dbCon db = new dbCon();
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    int row = -1;
    boolean flagForEdit =false;
    String vehicleno, grn, VDate, empno;
    private String loadlistId;
    
    public Addloadinglist()  throws  SQLException{
        initComponents();
       con=db.ConnectDB();
      viewEdit(false);
      
        
        ResultSet rs1 = con.createStatement().executeQuery("SELECT DISTINCT name FROM customer");
        while(rs1.next()){
            customer.addItem(rs1.getString("name"));
        }
        customer.setSelectedIndex(-1);
        
        ResultSet rs3 = con.createStatement().executeQuery("SELECT DISTINCT  Type FROM listaqlandfb");
        while(rs3.next()){
            Type.addItem(rs3.getString("Type"));
        }
        Type.setSelectedIndex(-1);
        
        ResultSet rs2 = con.createStatement().executeQuery("SELECT DISTINCT Tag_No FROM tag");
        while(rs2.next()){
            tagno.addItem(rs2.getString("Tag_No"));
        }
        tagno.setSelectedIndex(-1);
        
    }

      Addloadinglist(String loadlist_edit, String Type_edit, String customer_edit, String batch_edit, String Date_edit, String vehicleno_edit, String grn_edit, String empno_edit) {

        try {
            initComponents();//load init components
 con = db.ConnectDB();//db connection
            ResultSet rs1 = con.createStatement().executeQuery("SELECT  name FROM customer");
            while (rs1.next()) {
                customer.addItem(rs1.getString("name"));
            }
            customer.setSelectedIndex(-1);

            ResultSet rs2 = con.createStatement().executeQuery("SELECT DISTINCT Tag_No FROM tag");
            while (rs2.next()) {
                tagno.addItem(rs2.getString("Tag_No"));
            }
            tagno.setSelectedIndex(-1);
            
             ResultSet rs3 = con.createStatement().executeQuery("SELECT DISTINCT  Type FROM listaqlandfb");
            while(rs3.next()){
                Type.addItem(rs3.getString("Type"));
            }
            Type.setSelectedIndex(-1);

            try {
                //set data to swing components
                java.util.Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                date = sdf.parse(Date_edit);
                loadlist.setText(loadlist_edit);
                Type.setSelectedItem(Type_edit);
                customer.setSelectedItem(customer_edit);
                Date.setDate(date);
                tagno.setSelectedItem(batch_edit);

                //vehicle data---
                this.loadlistId=loadlist_edit;
                this.vehicleno=vehicleno_edit;
                this.grn=grn_edit;
               // this.VDate=VDate_edit;
                this.empno=empno_edit;
                
                flagForEdit = true;
                loadlist.setEditable(false);
                if (flagForEdit) {
                    //use to show an edit button instead of add Machine button
                    viewEdit(flagForEdit);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        typel = new javax.swing.JLabel();
        loadingcustomer = new javax.swing.JLabel();
        Type = new javax.swing.JComboBox<>();
        tagno = new javax.swing.JComboBox<>();
        Customer = new javax.swing.JLabel();
        Stylel = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        customer = new javax.swing.JComboBox<>();
        Date = new org.jdesktop.swingx.JXDatePicker();
        Datel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        loadlist = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(514, 482));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Add Loading List");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 13, 372, -1));

        jSeparator2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 490, 13));

        typel.setText("Type");
        jPanel1.add(typel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 60, 35));

        loadingcustomer.setText("Loadlist  No");
        jPanel1.add(loadingcustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 100, 35));

        Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeActionPerformed(evt);
            }
        });
        jPanel1.add(Type, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 200, 35));

        jPanel1.add(tagno, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, 201, 35));

        Customer.setText("Customer");
        jPanel1.add(Customer, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 60, 35));

        Stylel.setText("Tag No");
        jPanel1.add(Stylel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 50, 35));

        submit.setBackground(new java.awt.Color(0, 0, 255));
        submit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 255, 255));
        submit.setText("Next");
        submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitMouseClicked(evt);
            }
        });
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        jPanel1.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 140, 40));

        jSeparator3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 490, 13));

        customer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "hydragamini", "hela cothing", "brandix", " ", " " }));
        customer.setSelectedIndex(-1);
        customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerActionPerformed(evt);
            }
        });
        jPanel1.add(customer, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 201, 35));
        jPanel1.add(Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 200, 30));

        Datel.setText("Date");
        jPanel1.add(Datel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ITP/Images/Minimize.png"))); // NOI18N
        jLabel19.setText("jLabel14");
        jLabel19.setMaximumSize(new java.awt.Dimension(30, 30));
        jLabel19.setMinimumSize(new java.awt.Dimension(30, 30));
        jLabel19.setPreferredSize(new java.awt.Dimension(30, 30));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, -1, -1));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ITP/Images/Close.png"))); // NOI18N
        jLabel20.setText("jLabel14");
        jLabel20.setMaximumSize(new java.awt.Dimension(30, 30));
        jLabel20.setMinimumSize(new java.awt.Dimension(30, 30));
        jLabel20.setPreferredSize(new java.awt.Dimension(30, 30));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, -1, -1));

        loadlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadlistActionPerformed(evt);
            }
        });
        jPanel1.add(loadlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 200, 30));

        btnEdit.setBackground(new java.awt.Color(0, 0, 255));
        btnEdit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Next");
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditMouseClicked(evt);
            }
        });
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 140, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     boolean formValidate() throws SQLException
    {
    boolean flag=true;
    if ((Type.getSelectedIndex()) != -1) {
        if((customer.getSelectedIndex())!= -1){
            
                if((tagno.getSelectedIndex()!= -1)){
                    if(Date.getDate()== null){
                    JOptionPane.showMessageDialog(null, "Add Date", "Error", JOptionPane.ERROR_MESSAGE);
                    flag= false;
                }
                    if(loadlist.getText()== null){
                    JOptionPane.showMessageDialog(null, "Add loadlist No", "Error", JOptionPane.ERROR_MESSAGE);
                    flag= false;
                }
                     if(! (loadlist.getText().startsWith("L") && loadlist.getText().length() >1) ){
                    JOptionPane.showMessageDialog(null, "Invalid loadlist Number Format.Enter L<Numeric> Only ", "Error", JOptionPane.ERROR_MESSAGE);
                     return false; 
                    }
                    
                     ResultSet rs = con.createStatement().executeQuery("SELECT loadlistno FROM loadlist WHERE loadlistno = '"+loadlist.getText()+"'");
                        if(rs.next()){
                         JOptionPane.showMessageDialog(null, "loading list"
                                 + " No  exist", "Error", JOptionPane.ERROR_MESSAGE);
                         return false;
                            }
                }
                else{
                    JOptionPane.showMessageDialog(null, "select Style No", "Error", JOptionPane.ERROR_MESSAGE);
                    flag= false;
                }
                 
        }
        else{
            JOptionPane.showMessageDialog(null, "select customer", "Error", JOptionPane.ERROR_MESSAGE);
            flag= false;
        }
    }
    else{
        JOptionPane.showMessageDialog(null, "select type", "Error", JOptionPane.ERROR_MESSAGE);
           flag= false;
    }
        return flag;
        
    }
    
    
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
       // TODO add your handling code here:
       try {
////begin edit

           if((formValidate())==true){
              // JOptionPane.showMessageDialog(this, "Fill required fields");
              try {
                  
            String loadlistno = loadlist.getText();
            String type = String.valueOf(Type.getSelectedItem());  
            
            Date oDate = Date.getDate();//date selection combo eke name eka.

            //dateofpurchase eka date object ekak kara.
            
            java.sql.Date sqlDate=new java.sql.Date(oDate.getTime());//sql date ekakata convert karala thiyenne
            //simple date format ekata danna one nehe. 
            String customer =String.valueOf(this.customer.getSelectedItem());//meka sql walata pass karanna
          //  String lcustomer=String.valueOf(loadcustomer.getSelectedItem());
            String batchno=String.valueOf(tagno.getSelectedItem());

            
       
            String sql = "insert into loadlist (loadlistno,type,customer,batchno, dateofloadlist) values(?,?,?,?,?)";
                pst = con.prepareStatement(sql);
                pst.setString(1, loadlistno);
                pst.setString(2, type);
                pst.setString(3, customer);
                pst.setString(4, batchno);
                pst.setDate(5, sqlDate);//pass a sql date object
         
                int result = pst.executeUpdate();
                if (result == 1) {
                   
                   JOptionPane.showMessageDialog (this, "New loadlist added", "Done", JOptionPane.INFORMATION_MESSAGE);
                      clear();
                   
                }
                   
               } catch (Exception ex) {
                        Logger.getLogger(Addloadinglist.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
         catch (SQLException ex) {
            Logger.getLogger(Addloadinglist.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    
    }//GEN-LAST:event_submitActionPerformed

    private void TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeActionPerformed
        // TODO add your handling code here:
          try {
            // TODO add your handling code here:
            customer.removeAllItems();
            ResultSet rs4 = con.createStatement().executeQuery("SELECT Customer FROM listaqlandfb WHERE Type ='"+Type.getSelectedItem()+"'");
            while(rs4.next()){
                customer.addItem(rs4.getString("Customer"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Addloadinglist.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        customer.setSelectedIndex(-1);
    }//GEN-LAST:event_TypeActionPerformed

    private void submitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseClicked
        // TODO add your handling code here:
      //  this.hide();
        //checkloadinglist a = new checkloadinglist();
        //a.setVisible(true);
        
        
        
    }//GEN-LAST:event_submitMouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_jLabel20MouseClicked

    private void loadlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadlistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadlistActionPerformed

    private void btnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
          try {

            if ((formValidate()) == true) {
                // JOptionPane.showMessageDialog(this, "Fill required fields");
                try {

                    String loadlistno = loadlist.getText();
                    
                    String type = String.valueOf(Type.getSelectedItem());

                    Date oDate = Date.getDate();//date selection combo eke name eka.

                    //dateofpurchase eka date object ekak kara.
                    java.sql.Date sqlDate = new java.sql.Date(oDate.getTime());//sql date ekakata convert karala thiyenne
                    //simple date format ekata danna one nehe. 
                    String customer = String.valueOf(this.customer.getSelectedItem());//meka sql walata pass karanna
                    String batchno = String.valueOf(tagno.getSelectedItem());

                    String sql = "update loadlist set type=?, customer=?, batchno=? ,dateofloadlist=?  where loadlistno=? ";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, type);
                    pst.setString(2, customer);
                     pst.setString(3, batchno);
                    pst.setDate(4, sqlDate);//pass a sql date object
                    pst.setString(5, loadlistno);//status ekata ena walue eka pass karanna.
                   

                    int result = pst.executeUpdate();
                    if (result == 1) {

                        JOptionPane.showMessageDialog(this, "Loadlist  updated");
                        flagForEdit = false;
                        viewEdit(flagForEdit);
                        clear();
                        this.dispose();
                        
                         try {
                            IssueGatepass b = new IssueGatepass(vehicleno, grn, loadlistId, empno);
                            b.setVisible(true);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                            Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                } catch (Exception ex) {
                    Logger.getLogger(Loading.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerActionPerformed
        // TODO add your handling code here:
        
         try {
            // TODO add your handling code here:
            tagno.removeAllItems();
            ResultSet rs2 = con.createStatement().executeQuery("SELECT Tag_No FROM tag WHERE Customer ='"+customer.getSelectedItem()+"'");
            while(rs2.next()){
                tagno.addItem(rs2.getString("Tag_No"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Addloadinglist.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        tagno.setSelectedIndex(-1);
    }//GEN-LAST:event_customerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Addloadinglist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Addloadinglist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Addloadinglist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Addloadinglist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Addloadinglist().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Addloadinglist.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Customer;
    private org.jdesktop.swingx.JXDatePicker Date;
    private javax.swing.JLabel Datel;
    private javax.swing.JLabel Stylel;
    private javax.swing.JComboBox<String> Type;
    public javax.swing.JButton btnEdit;
    private javax.swing.JComboBox<String> customer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel loadingcustomer;
    private javax.swing.JTextField loadlist;
    public javax.swing.JButton submit;
    private javax.swing.JComboBox<String> tagno;
    private javax.swing.JLabel typel;
    // End of variables declaration//GEN-END:variables

private void clear() {

        loadlist.setText(null);
        Type.setSelectedItem(null);
        Date.setDate(null);
        customer.setSelectedItem(null);
        tagno.setSelectedItem(null);
        
    }

   private void viewEdit(boolean flag) {
        btnEdit.setVisible(flag);
        submit.setVisible(!flag);
    }
}
